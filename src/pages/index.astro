---
import Layout from '../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import ComposariumList from '@components/organisms/composarium/ComposariumList.astro';

// Types
export interface ComponentsItem {
	path: string,
	cover: ImageMetadata,
	cover2x: ImageMetadata,
	title: string,
	description: string,
	category: string,
	subcategory: string,
}

export interface SubcategoryItem {
	title: string,
	description: string,
	category: string,
	componentsItems: ComponentsItem[],
}

export interface CategoryItem {
	title: string,
	description: string,
	isSpecial: boolean,
	componentsItems: ComponentsItem[] | false,
	subcategoryItems: SubcategoryItem[] | false,
}

// Get all entries
const allComponents = await getCollection('components');
const allCategory = await getCollection('category');
const allSubcategory = await getCollection('subcategory');

const componentsItems: ComponentsItem[] = allComponents.map((item: CollectionEntry<"components">): ComponentsItem => {
	return {
		path: 'components/'+item.slug,
		cover: item.data.cover,
		cover2x: item.data.cover2x,
		title: item.data.title,
		description: item.data.description,
		category: item.data.category.slug,
		subcategory: item.data.subcategory && item.data.subcategory.slug,
	}
});

const subcategoryItems: SubcategoryItem[] = allSubcategory.map((subcategoryItem: CollectionEntry<"subcategory">) => {
	return {
		title: subcategoryItem.data.title,
		description: subcategoryItem.data.description,
		category: subcategoryItem.data.category.slug,
		componentsItems: componentsItems.filter((componentItem) => componentItem.subcategory === subcategoryItem.slug),
	}
});

const categoryItems: CategoryItem[] = allCategory.map((categoryItem: CollectionEntry<"category">): CategoryItem => {
	
	const subcategoryItemsData = subcategoryItems.filter((subcategoryItem) => subcategoryItem.category === categoryItem.slug);

	return {
		title: categoryItem.data.title,
		description: categoryItem.data.description,
		isSpecial: categoryItem.data.isSpecial,
		componentsItems: componentsItems.filter((componentItem) => componentItem.category === categoryItem.slug && !componentItem.subcategory ),
		subcategoryItems: subcategoryItemsData.length > 0 && subcategoryItemsData,
	}
});


---

<Layout title="Welcome to Astro.">
	<main class="container">

		<div class="composarium-head">
			<h1 class="composarium-head__title">Composarium</h1>
			<ul class="composarium-head__tags">
				<li class="composarium-head__tag">
					astro
				</li>
				<li class="composarium-head__tag">
					bem
				</li>
				<li class="composarium-head__tag">
					vanilla
				</li>
			</ul>
			<div class="composarium-head__description">
				<p>
					A modular collection of pre-built UI components designed with Astro, BEM, and vanilla JavaScript.
				</p>
			</div>
		</div>

		<ComposariumList data={categoryItems}>
	</main>
</Layout>

<style lang="scss">
	@use "@scss/config" as *;

	.container{
		// container
		display: block;
		width: 100%;
		max-width: rem(1296);
		margin: 0 auto;
		// container
	}

	// Head Composarium
	.composarium-head{
		margin-bottom: rem(40);
		&__title{
			font-size: $fs-4xl;
			font-weight: $fw-bold;
			margin-bottom: rem(10);
			// line-height: .7;
			@include mq('max','lg'){
				font-size: $fs-3xl;
			}
			@include mq('max','md'){
				font-size: $fs-2xl;
			}
		}
		&__tags{
			display: flex;
			gap: rem(10);
			margin-bottom: rem(20);
		}
		&__tag{
			padding: rem(0) rem(7);
			font-size: $fs-base;
			background: $gray-300;
			border-radius: $radius-base;
		}
		&__description{
		}
	}
</style>
